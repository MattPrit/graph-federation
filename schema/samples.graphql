input AddSampleEventInput {
  description: String!
}

input CreateSampleInput {
  proposalNumber: Int!
  instrumentSessionNumber: Int!
  samples: [SampleIn!]!
}

"""Date with time (isoformat)"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf).
"""
scalar JSON @specifiedBy(url: "https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf")

type Mutation {
  createSamples(input: CreateSampleInput!): [Sample!]!
  sample(sampleId: UUID!): SampleMutations
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type Query {
  """Get a sample by its id"""
  sample(sampleId: UUID!): Sample

  """Get a list of samples associated with a given instrument session"""
  samples(proposalNumber: Int!, instrumentSessionNumber: Int!, first: Int!, before: String = null, after: String = null, last: Int = null): SampleConnection!
}

type Sample {
  id: UUID!
  name: String!
  sampleMetadata: JSON!
  createdTime: DateTime!
  updatedTime: DateTime!
  schemaUrl: String!

  """Samples from which this sample is derived"""
  parents(first: Int = null, before: String = null, after: String = null, last: Int = null): SampleConnection!

  """Samples derived from this sample"""
  children(first: Int = null, before: String = null, after: String = null, last: Int = null): SampleConnection!

  """Events linked to this sample"""
  events(first: Int = null, before: String = null, after: String = null, last: Int = null): SampleEventConnection!

  """The JSON schema that the samples `sampleMetadata` conforms to"""
  metadataSchema: JSON!
}

type SampleConnection {
  edges: [SampleEdge!]!
  pageInfo: PageInfo!
}

type SampleEdge {
  cursor: String!
  node: Sample!
}

type SampleEvent {
  id: UUID!
  timestamp: DateTime!
  description: String!
}

type SampleEventConnection {
  edges: [SampleEventEdge!]!
  pageInfo: PageInfo!
}

type SampleEventEdge {
  cursor: String!
  node: SampleEvent!
}

input SampleIn {
  name: String!
  schemaUrl: String!
  sampleMetadata: JSON!
  parentIds: [Int!] = null
  children: [SampleIn!] = null
}

type SampleMutations {
  sampleId: UUID!
  linkInstrumentSessionToSample(proposalNumber: Int!, instrumentSessionNumber: Int!): Void
  addSampleEvent(sampleEvent: AddSampleEventInput!): SampleEvent!
}

scalar UUID

"""Represents NULL values"""
scalar Void
